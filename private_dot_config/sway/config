#-----------#
# Variables #
#-----------#

# Colours
set $rosewater #f5e0dc
set $mauve     #cba6f7
set $red       #622025
set $text      #cdd6f4
set $base      #1e1e2e
set $mantle    #181825

set $dark_purple      #1a1a26
set $highlight_purple #6d066f

# target                 title         bg    text   indicator  border
client.focused           $dark_purple  $base $text  $mantle    $highlight_purple
client.focused_inactive  $base         $base $text  $base      $base
client.unfocused         $mauve        $base $text  $rosewater $dark_purple
client.urgent            $red          $base $text  $red       $red
client.placeholder       $base         $base $text  $base      $base
client.background        $red

# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Terminal emulator
set $term foot

# Browser
set $browser firefox

# Application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $rofi_cmd rofi \
    -terminal '$term'
# Shows a list of the applications with desktop files
set $menu $rofi_cmd -show drun

# Power menu. Requires rofi-power-menu script be in ~/.local/bin.
set $power_menu $rofi_cmd -show power-menu -modi \
    "power-menu:rofi-power-menu --choices=shutdown/reboot/logout"

# File manager
set $file_manager nemo 
#-----------------------------------------------------------------------------------#


#-----------------------#
# WM Behaviour Settings #
#-----------------------#

input * {
    # Never use mouse acceleration
    accel_profile "flat" 
}

# Window decorations
default_border pixel 4
gaps inner 10

# Specific program behaviour
for_window [class="vlc"] floating enable

# Font
# font JetBrainsMonoNerdFont-Bold 12
font Monocraft Nerd Font 12

# Prevent window focus from changing based on mouse hover
focus_follows_mouse no

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
    timeout 300 'swaylock -f -c 000000' \
    timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
    before-sleep 'swaylock -f -c 000000'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
#-------------------------------------------------------------------------------------#


#----------#
# Keybinds #
#----------#

# Start a terminal
bindsym $mod+Return exec $term

# Launch browser
bindsym $mod+x exec $browser

# Kill focused window
bindsym $mod+q kill

# Start your launcher
bindsym $mod+d exec $menu

# Start power menu
bindsym $mod+shift+e exec $power_menu

# Start file manager
bindsym $mod+f exec $file_manager

# Access audio manager
bindsym $mod+a exec pavucontrol

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
# bindsym $mod+Shift+e exec swaynag -t warning -m \
# 'You pressed the exit shortcut. \
# Do you really want to exit sway? This will end your Wayland session.' \
# -B 'Yes, exit sway' 'swaymsg exit'

# Moving around:
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Workspaces:

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

# Layout stuff:
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+space layout toggle split

# Make the current focus fullscreen
bindsym $mod+Shift+f fullscreen


# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+Alt+space focus mode_toggle

# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# Resizing containers:

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Key bindings for taking screenshots

# The image files will be written to XDG_SCREENSHOTS_DIR if this is set
# or defined in user-dirs.dir, or to a fallback location XDG_PICTURES_DIR.
#
# Copy the file to ~/.config/sway/config.d/60-bindings-screenshot.conf (or to
# your $XDG_CONFIG_HOME location if set differently) to be able to overwrite
# existing shortcuts.
# Check 'man grimshot' for additional commands that you may find useful.
#
# Requires:     grimshot

bindsym {
    # Capture the currently active output
    # $mod+p exec grimshot save output && notify-send "Screenshot taken"
    # Capture the currently active window
    Alt+p exec grimshot save active && notify-send "Window screenshot taken"
    # Select and capture a custom rectangular area
    Ctrl+p exec grimshot save area && notify-send "Area screenshot taken"
}

# Key bindings to control pipewire or pulseaudio volume with pactl.
# Displays a notification with the current state if /usr/bin/notify-send is available
#
# Volume increase/decrease step can be customized by setting the `$volume_step`
# variable to a numeric value before including the file.
# Maximum volume boost level can be set with the `$volume_limit` variable.
#
# Requires:     pulseaudio-utils
# Recommends:   libnotify

set $volume_helper_cmd /usr/libexec/sway/volume-helper

# Allow volume controls even if the screen is locked
bindsym --locked {
    # XF86AudioRaiseVolume exec \
    #     $volume_helper_cmd --limit "$volume_limit" --increase "$volume_step"
    # XF86AudioLowerVolume exec \
    #     $volume_helper_cmd --limit "$volume_limit" --decrease "$volume_step"
    # XF86AudioMute    exec pactl set-sink-mute @DEFAULT_SINK@ toggle && $volume_helper_cmd
    # XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
}

# A special mode for passing any keybindings to the focused application
# mode "passthrough" {
#     bindsym $mod+Pause mode default
# }
# bindsym $mod+Pause mode "passthrough"
#-----------------------------------------------------------------------------------------#


#--------------------------#
# Window Specific Settings #
#--------------------------#
# apply mark for Xwayland and wayland native browser windows
for_window [class="Chromium-browser"] mark Browser
for_window [class="Brave-browser"] mark Browser
for_window [class="firefox"]  mark Browser
for_window [app_id="Chromium-browser"] mark Browser
for_window [app_id="brave-browser"] mark Browser
for_window [app_id="firefox"] mark Browser

# inhibit scrensaver for fullscreen browser windows
for_window [con_mark="Browser"] {
    inhibit_idle fullscreen
}

# Make VLC better lol
for_window [class="vlc"] {
    inhibit_idle fullscreen

    floating enable
    move position center

    resize set width 800
    resize set height 600
}

# firefox wayland screensharing indicator
for_window [app_id="firefox" title="Firefox â€” Sharing Indicator"] {
    floating enable
}

# Display PulseAudio volume control application (both GTK and Qt varieties)
# as a floating window.

for_window [app_id="pavucontrol"] {
    floating enable
    move position center
}

for_window [app_id="pavucontrol-qt"] {
    floating enable
    move position center
}

# Bluetooth Manager
for_window [app_id="blueman-manager"] {
    floating enable
    move position center

    resize set width 800
    resize set height 600
}

# Network Connection Editor
for_window [app_id="nm-connection-editor"] {
    floating enable
    move position center

    resize set width 800
    resize set height 600
}

for_window [app_id="lxqt-policykit-agent"] {
    floating enable
    move position center
}
# -----------------------------------------------------------------------------------------------

#----------#
# Includes #
#----------#
include 'desktop-displays.conf'
include 'desktop-peripherals.conf'
# --------------------------------


#---------------#
# Miscellaneous #
#---------------#

# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.
#
include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'
